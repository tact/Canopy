import CloudKit

public extension CKShare {
  static var mock: CKShare {
    let shareBase64 = "YnBsaXN0MDDUAAEAAgADAAQABQAGAAcAClgkdmVyc2lvblkkYXJjaGl2ZXJUJHRvcFgkb2JqZWN0cxIAAYagXxAPTlNLZXllZEFyY2hpdmVy0QAIAAl" +
      "Ucm9vdIABrxBdAAsADACLAIwAkgCTAJwAnQCeAKQApwCoAKkAqgCuAK8AsgC4ALkAvADCAOUA5gD4APwA/QECAQMBBAEIARgBGQEaAR4BIgEsAS0BLgEyATUBOAE5ATwBPQFA" +
      "AU8BUAFRAVwBYAFhAWQBbQF0AXgBeQF6AXsBfAF9AX4BgQGGAZUBlgGhAaQBrQG0AbUBxAHFAcYB0QHUAd0B5AHlAeYB6QHtAfAB+AH9AgECBQIIAgwCEQIVAhkCHAIhVSRud" +
      "Wxs3xBAAA0ADgAPABAAEQASABMAFAAVABYAFwAYABkAGgAbABwAHQAeAB8AIAAhACIAIwAkACUAJgAnACgAKQAqACsALAAtAC4ALwAwADEAMgAzADQANQA2ADcAOAA5ADoAOw" +
      "A8AD0APgA/AEAAQQBCAEMARABFAEYARwBIAEkASgBLAEwATQBOAE4AUABOAE4ATQBOAE4ATgBOAE0ATgBOAE4ATQBdAE4AXwBOAE4ATgBjAE4ATQBOAGcAaABnAE4AZwBNAGs" +
      "ATgBtAE4AbwBOAE4ATgBzAHQAdQBOAE4AeABOAE4AewBOAE4AfgBOAE0ATgBOAE0ATQBNAE4ATgBOAIkATl8QGEhhc1VwZGF0ZWRTaGFyZVJlZmVyZW5jZV5Qcm90ZWN0aW9u" +
      "RGF0YV1QdWJsaWNQQ1NFdGFnVEVUYWdfEBBNb2RpZmllZEJ5RGV2aWNlXxARVXBkYXRlZEV4cGlyYXRpb25fEBVBbGxvd3NBbm9ueW1vdXNBY2Nlc3NfEBhMYXN0TW9kaWZpZ" +
      "WRVc2VyUmVjb3JkSURaSW52aXRlZFBDU1xQbHVnaW5GaWVsZHNfEBVQcmV2aW91c1B1YmxpY1BDU0V0YWdfEBBXYW50c0NoYWluUENTS2V5XFpvbmVpc2hLZXlJRFhQQ1NLZX" +
      "lJRFtSZWNvcmRNdGltZV8QFVdhbnRzUHVibGljU2hhcmluZ0tleVpWYWx1ZVN0b3JlXxASUHJvdGVjdGlvbkRhdGFFdGFnWlJvdXRpbmdLZXlfEA9DaGFpblByaXZhdGVLZXl" +
      "fEBNDcmVhdG9yVXNlclJlY29yZElEXxAmUHJldmlvdXNQcm90ZWN0aW9uRGF0YUV0YWdGcm9tVW5pdFRlc3RaUmVjb3JkVHlwZV5JbnZpdGVkUENTRXRhZ1lXYXNDYWNoZWRe" +
      "U2hhcmVSZWZlcmVuY2VfEB5QYXJ0aWNpcGFudFNlbGZSZW1vdmFsQmVoYXZpb3JfEBdMYXN0RmV0Y2hlZFBhcnRpY2lwYW50c1pQZXJtaXNzaW9uWVNoYXJlRXRhZ18QFVBhc" +
      "nRpY2lwYW50VmlzaWJpbGl0eV8QEVVzZUxpZ2h0d2VpZ2h0UENTXxAgTXV0YWJsZUVuY3J5cHRlZFB1YmxpY1NoYXJpbmdLZXlcUm9vdFJlY29yZElEXxAQUHVibGljUGVybW" +
      "lzc2lvbl8QE0NoYWluUHJvdGVjdGlvbkRhdGFfEBNBZGRlZFBhcnRpY2lwYW50SURzXxAPUGFyZW50UmVmZXJlbmNlXxAWUHJldmlvdXNTaGFyZVJlZmVyZW5jZV8QGlByZXZ" +
      "pb3VzUHJvdGVjdGlvbkRhdGFFdGFnViRjbGFzc18QE0VuY3J5cHRlZFZhbHVlU3RvcmVfEBVSZW1vdmVkUGFydGljaXBhbnRJRHNZUHVibGljUENTXxAWVG9tYnN0b25lZFB1" +
      "YmxpY0tleUlEc18QEURpc3BsYXllZEhvc3RuYW1lXxAXUHJldmlvdXNQYXJlbnRSZWZlcmVuY2VTVVJMWFJlY29yZElEW1JlY29yZEN0aW1lXxAWUHJldmlvdXNJbnZpdGVkU" +
      "ENTRXRhZ1xQYXJ0aWNpcGFudHNfEBZab25lUHJvdGVjdGlvbkRhdGFFdGFnV0V4cGlyZWRfEBZDaGFpblBhcmVudFB1YmxpY0tleUlEXxATSW52aXRlZEtleXNUb1JlbW92ZV" +
      "8QFEhhc1VwZGF0ZWRFeHBpcmF0aW9uXUtub3duVG9TZXJ2ZXJfEBlIYXNVcGRhdGVkUGFyZW50UmVmZXJlbmNlWUJhc2VUb2tlbl5FeHBpcmF0aW9uRGF0ZV8QEkNvbmZsaWN" +
      "0TG9zZXJFdGFnc1tDb250YWluZXJJRFxBbGxQQ1NLZXlJRHMIgACAAIAKgACAAAiAAIAAgACAAAiAAIAAgAAIgFGAAIALgACAAIAAgAKAAAiAABAAgD2AAAiADYAAEAGAAIBO" +
      "gACAAIAAgFyAV4BQgACAAIAMgACAAIADgACAAIATgAAIgACAAAgICIAAgACAAIAQgABeY2xvdWRraXQuc2hhcmXTADUAjQCOAI8AkACRWlJlY29yZE5hbWVWWm9uZUlEgAmAB" +
      "IAFXxAqNzk2MEUzMTktMzMxRC00ODJCLTg3MjMtMUIyRTJGQ0U1QTBDLXNoYXJl1QCUAJUAlgCXADUAZwBOAJkAmgCbXxAQZGF0YWJhc2VTY29wZUtleV8QEWFub255bW91c0" +
      "NLVXNlcklEWW93bmVyTmFtZVhab25lTmFtZYAAgAeABoAIVUNoYXRzXxAhXzJiN2UyNjg4MWNmZjY3YTk2MzY5MWI0ZDU3YzczZWZl0gCfAKAAoQCiWiRjbGFzc25hbWVYJGN" +
      "sYXNzZXNeQ0tSZWNvcmRab25lSUSiAKEAo1hOU09iamVjdNIAnwCgAKUAplpDS1JlY29yZElEogClAKNSNDZTMGIxXnd3dy5pY2xvdWQuY29t0gCrADUArACtXUVuY3J5cHRl" +
      "ZERhdGGADoAPTxAnMCUCAQEEIN0E98x2eI/DxTpCvba7pDbkD4XAxALzsCmDVB4MoBbb0gCfAKAAsACxXxAPQ0tFbmNyeXB0ZWREYXRhogCwAKPTADUAswC0ALUAtgC3XxATQ" +
      "29udGFpbmVySWRlbnRpZmllcltFbnZpcm9ubWVudIASgBEQAl8QGGlDbG91ZC5jb20uanVzdHRhY3QuVGFjdNIAnwCgALoAu11DS0NvbnRhaW5lcklEogC6AKPSAL0ANQC+AM" +
      "FaTlMub2JqZWN0c6IAvwDAgBSALIA83xAVACkAwwDEAMUANQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYAbQC3AE0A2ABtAE0A2gBOAE0AbQC3AE4ATQDfAE4" +
      "A1gBNAE4ATQDkXxAYT3JpZ2luYWxBY2NlcHRhbmNlU3RhdHVzXxAST3JpZ2luYWxQZXJtaXNzaW9uXxAXd2FudHNOZXdJbnZpdGF0aW9uVG9rZW5fEBxtdXRhYmxlSW52aXRh" +
      "dGlvblRva2VuU3RhdHVzXxAdaXNBbm9ueW1vdXNJbnZpdGVkUGFydGljaXBhbnRdUGFydGljaXBhbnRJRFlJbnZpdGVySURfEBBDcmVhdGVkSW5Qcm9jZXNzVFR5cGVfEBBBY" +
      "2NlcHRhbmNlU3RhdHVzXxAXUHJvdGVjdGlvbkluZm9QdWJsaWNLZXleSXNPcmdBZG1pblVzZXJcVXNlcklkZW50aXR5XxAPSW52aXRhdGlvblRva2VuXxAXT3JpZ2luYWxQYX" +
      "J0aWNpcGFudFR5cGVfEBFBY2NlcHRlZEluUHJvY2Vzc15Qcm90ZWN0aW9uSW5mb11Jc0N1cnJlbnRVc2VyXxAVRW5jcnlwdGVkUGVyc29uYWxJbmZvEAMIgCsIgBWAAAiAAAi" +
      "AFoAACIAACIAqXxAkM0Y2MEM2QTEtQjY2NS00QTk4LThDMUYtMDE0MDhFMDA1NTM42gDnAA4A6ADpAOoA1QA1AOsA7ADtAE0ATgDwAPEA8gDzAPQATgD2APdYSXNDYWNoZWRc" +
      "VXNlclJlY29yZElEXxAQSGFzSUNsb3VkQWNjb3VudF5OYW1lQ29tcG9uZW50c18QEU9PTlByb3RlY3Rpb25EYXRhWkxvb2t1cEluZm9fEBJDb250YWN0SWRlbnRpZmllcnMIg" +
      "ACAFwmAHIAogCmAAIAigCbTADUAjQCOAI8A+gD7gAmAGIAZXxAhXzJiN2UyNjg4MWNmZjY3YTk2MzY5MWI0ZDU3YzczZWZl1QCUAJUAlgCXADUAZwBOAP8BAACbgACAG4AagA" +
      "hcX2RlZmF1bHRab25lXxAQX19kZWZhdWx0T3duZXJfX9IANQEFAQYBB18QGE5TLm5hbWVDb21wb25lbnRzUHJpdmF0ZYAhgB3YAQkANQEKAQsBDAENAQ4BDwBOAREBEgBOARQ" +
      "ATgBOAE5dTlMubWlkZGxlTmFtZV1OUy5mYW1pbHlOYW1lW05TLm5pY2tuYW1lXE5TLmdpdmVuTmFtZV1OUy5uYW1lUHJlZml4XU5TLm5hbWVTdWZmaXhfEBlOUy5waG9uZXRp" +
      "Y1JlcHJlc2VudGF0aW9ugACAIIAfgACAHoAAgACAAFZKYWFudXNUS2FzZdIAnwCgARsBHF8QG19OU1BlcnNvbk5hbWVDb21wb25lbnRzRGF0YaIBHQCjXxAbX05TUGVyc29uT" +
      "mFtZUNvbXBvbmVudHNEYXRh0gCfAKABHwEgXxAWTlNQZXJzb25OYW1lQ29tcG9uZW50c6IBIQCjXxAWTlNQZXJzb25OYW1lQ29tcG9uZW50c9YANQEjAD0BJADVASUBJgBOAE" +
      "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" +
      "tNEE5OC04QzFGLTAxNDA4RTAwNTUzONoA5wAOAOgA6QDqANUANQDrAOwA7QBNAE4A8ADxAZsATgD0AE4BnwD3CIAAgBcJgEGAAIApgACAQ4Am0gA1AQUBBgGjgCGAQtgBCQA1" +
      "AQoBCwEMAQ0BDgEPAE4BEQESAE4BFABOAE4AToAAgCCAH4AAgB6AAIAAgADWADUBIwA9ASQA1QElASYATgBOAE0ATgGzgCWAAIAACIAAgERfEBVqYWFudXNAamFhbnVza2FzZ" +
      "S5jb23fEBUAKQDDAMQAxQA1AMYAxwDIAMkAygDLAMwAzQDOAM8A0ADRANIA0wDUANUA1gBtALcATQDYAG0ATQG5AboATQDWALcATgBNAb4ATgDWAE0BwQDxAE4IgCsIgEaARw" +
      "iAAAiASIAACIBNCYAAXxAkRUNCQUM3NTItQ0EzNi00NDdBLTg4MTAtNTQxRTlEMDZBMjUyXxAhXzJiN2UyNjg4MWNmZjY3YTk2MzY5MWI0ZDU3YzczZWZl2gDnAA4A6ADpAOo" +
      "A1QA1AOsA7ADtAE0ByAFUAPEBywBOAPQATgHPAPcIgEyAMAmASYAAgCmAAIBLgCbSADUBBQEGAdOAIYBK2AEJADUBCgELAQwBDQEOAQ8ATgERARIATgEUAE4ATgBOgACAIIAf" +
      "gACAHoAAgACAANYANQEjAD0BJADVASUBJgBOAXAATQBOAE6AJYAAgDUIgACAAE8QiTCBhgRBBKVQXKIg4Rpaka+4esuuk+Z9Q0+xZ/wieY0p2pTxRgUY0NJrX8Ykgklo2pUKe" +
      "JAm2YNb1LG6tCJM714u3iACp+cEQQRi7mui7f06CQheVIaoYbEqx1w8CNiUfryEI97BjoSwGVg+j/FcwMLYabeCLRK2qKzxQzOSBRpVLXB9QS67TIljTxECz2GCAsswggLHMI" +
      "IBFgIBADGCAQ8wggELMIGPAgEHBIGJMIGGBEEEpVBcoiDhGlqRr7h6y66T5n1DT7Fn/CJ5jSnalPFGBRjQ0mtfxiSCSWjalQp4kCbZg1vUsbq0IkzvXi7eIAKn5wRBBGLua6L" +
      "t/ToJCF5UhqhhsSrHXDwI2JR+vIQj3sGOhLAZWD6P8VzAwthpt4ItEraorPFDM5IFGlUtcH1BLrtMiWMEdAIIBGgLd+DlqclWIk8YrloBXMTjEBYAwqlvKiR7pEDx0+ZZwoXo" +
      "IxGDZ+dXw+KlPFQOxIdHHftJhoPmH4E7ZftnkA8wF1YFkdnIBltUuXnPVN0qxIxipDaFX1XoU5qkBqHndKXh1Bo7AZ5rcpJFfhlubd8zAgEBoIGoBIGlA+O5AhOXOUJhtLx8M" +
      "4N3tCdFEIxGBnr9aDNtkuTYzt6vBOyWWQMy6vhozQri9av2MJtBx+4DUoDXvr7fGGCcaEngKPmz7+YKld3qu2XrYI8FD0vFuB+THnsWlYKbHjElJPEU9FPXEy5CAIQFXGdyHx" +
      "1969uAsk0XLrlGJ4M5/CZim/Cw2MV/fe8g7MqLsR3+mgeDvEfWiXmVzj7koeXrDd2B6iXFoYHVMIHSAgEEBIHMMIHJAgEBAgEAMEYCAQEEQQRdGm6Rr22ZbOzwCtDaIiR5/D6" +
      "uLBvgfBfz+QBGQFjVXaFSOiNqMcwhVIYzrlhQypYkGChXK7F9JdpRvgJ7LyMKME4EAAIBAQRHMEUCIQDOOCryiVHWIo6S19gI1ZwYm0RmmHPqO+ToGv8PRdxrugIgXPeCQtex" +
      "ZgOL4e+JpUzyy0QRtRfVNQgmX4JnTOgnzuyiKTAnMCUCAQMEIOo6pT034yRgNsJgHxygGeEYFzQ4gilMSe2mjDRZ8Xq+BCBDnA4PWEE5IQu+XKjXo1qWoshGnJvfQq445eEkM" +
      "BVznKIGBATjuROX0gC9ADUB5wHooIBP0gCfAKAB6gHrXE5TTXV0YWJsZVNldKMB6gHsAKNVTlNTZXTSAL0ANQHuAeiggE/UAfEB8gHzADUB9AH1AfYB91tDaGFuZ2VkS2V5c1" +
      "5PcmlnaW5hbFZhbHVlc1xSZWNvcmRWYWx1ZXOAVYBUgFKAVtMB+QC9ADUB+gH7AfxXTlMua2V5c6CggFPSAJ8AoAH+Af9fEBNOU011dGFibGVEaWN0aW9uYXJ5owH+AgAAo1x" +
      "OU0RpY3Rpb25hcnnTAfkAvQA1AgICAwH8oKCAU9IAvQA1AgYB6KCAT9IAnwCgAgkCCl8QEkNLUmVjb3JkVmFsdWVTdG9yZaICCwCjXxASQ0tSZWNvcmRWYWx1ZVN0b3Jl1AHx" +
      "AfIB8wA1Ag0CDgIPAhCAWoBZgFiAW9MB+QC9ADUCEgITAfygoIBT0wH5AL0ANQIWAhcB/KCggFPSAL0ANQIaAeiggE/SAJ8AoAIdAh5fEBtDS0VuY3J5cHRlZFJlY29yZFZhb" +
      "HVlU3RvcmWjAh8CIACjXxAbQ0tFbmNyeXB0ZWRSZWNvcmRWYWx1ZVN0b3JlXxASQ0tSZWNvcmRWYWx1ZVN0b3Jl0gCfAKACIgIjV0NLU2hhcmWjAiICJACjWENLUmVjb3JkAA" +
      "gAGQAiACwAMQA6AD8AUQBWAFsAXQEaASACIwI+Ak0CWwJgAnMChwKfAroCxQLSAuoC/QMKAxMDHwM3A0IDVwNiA3QDigOzA74DzQPXA+YEBwQhBCwENgROBGIEhQSSBKUEuwT" +
      "RBOME/AUZBSAFNgVOBVgFcQWFBZ8FowWsBbgF0QXeBfcF/wYYBi4GRQZTBm8GeQaIBp0GqQa2BrcGuQa7Br0GvwbBBsIGxAbGBsgGygbLBs0GzwbRBtIG1AbWBtgG2gbcBt4G" +
      "4AbiBuMG5QbnBukG6wbsBu4G8AbyBvQG9gb4BvoG/Ab+BwAHAgcEBwYHCAcKBwwHDgcQBxIHFAcWBxcHGQcbBxwHHQceByAHIgckByYHKAc3B0QHTwdWB1gHWgdcB4kHngexB" +
      "8UHzwfYB9oH3AfeB+AH5ggKCBMIHggnCDYIOwhECE0IWAhdCGAIZAhzCHwIigiMCI4IuAjBCNMI2AjlCPsJBwkJCQsJDQkoCTEJPwlECU0JWAldCV8JYQljCboJ1QnqCgQKIw" +
      "pDClEKWwpuCnMKhgqgCq8KvArOCugK/AsLCxkLMQszCzQLNgs3CzkLOws8Cz4LPwtBC0MLRAtGC0cLSQtwC5kLoguvC8IL0QvlC/AMBQwGDAgMCgwLDA0MDwwRDBMMFQwXDCQ" +
      "MJgwoDCoMTgxjDGUMZwxpDGsMeAyLDJQMrwyxDLMM1AziDPAM/A0JDRcNJQ1BDUMNRQ1HDUkNSw1NDU8NUQ1YDV0NZg2EDYkNpw2wDckNzg3nDgAODA4bDigOKg4sDi4OLw4x" +
      "DjMOSw+cD6UPwA/FD+AP6Q/qD+wP9Q/9EAIS3RLmEvUS+hRSFFsUcBR1FMwUzRTPFNAU0hTUFNUU1xTYFNoU3BTdFN8U4BTiFQkVLRVWFVcVWRVbFVwVXhVgFWIVZBVmFWgVd" +
      "RV3FXkVexWOFZcVmRWbFbwVvhXAFcIVxBXGFcgVyhXMFeUV5xXpFesV7BXuFfAV/RX/FgEWAxYWFz0XyRqkHXce0h7bHuoe8R76Hv8fAR8DHwUfXB9dH18fYB9iH2QfZR9nH2" +
      "gfah9sH20fbx9wH3IfmR/CH8MfxR/HH8gfyh/MH84f0B/SH9Qf3R/fH+EgAiAEIAYgCCAKIAwgDiAQIBIgKyAtIC8gMSAyIDQgNiBOIKUgpiCoIKkgqyCtIK4gsCCxILMgtSC" +
      "2ILgguSC7IOIhBiEvITAhMiE0ITUhNyE5ITshPSE/IUEhSiFMIU4hbyFxIXMhdSF3IXkheyF9IX8hmCGaIZwhniGfIaEhoyIvJQIlCyUMJQ4lFyUkJSslMSU6JTslPSVOJVol" +
      "aSV2JXgleiV8JX4liyWTJZQllSWXJaAltiW9Jcol1yXYJdkl2yXkJeUl5yXwJgUmCiYfJjAmMiY0JjYmOCZFJkYmRyZJJlYmVyZYJlomYyZkJmYmbyaNJpQmsibHJtAm2CbfA" +
      "AAAAAAAAgIAAAAAAAACJQAAAAAAAAAAAAAAAAAAJug="
    
    let mockShareData = Data(base64Encoded: shareBase64)!
    do {
      guard let share = try NSKeyedUnarchiver.unarchivedObject(
        ofClass: CKShare.self,
        from: mockShareData
      ) else {
        fatalError("Could not unarchive the mock share")
      }
      return share
    } catch {
      fatalError("Could not unarchive the mock share: \(error)")
    }
  }
}
